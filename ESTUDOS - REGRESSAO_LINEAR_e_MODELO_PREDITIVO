{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyM/fUIAD4lWKryBsBjTEgfq",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/DiogoWorkGit/Python_Notebooks/blob/master/ESTUDOS%20-%20REGRESSAO_LINEAR_e_MODELO_PREDITIVO\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Predições com regressão"
      ],
      "metadata": {
        "id": "Ry7vESBBuREh"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 109,
      "metadata": {
        "id": "TcDq0no6AEvc"
      },
      "outputs": [],
      "source": [
        "# Import de libs\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "from sklearn.linear_model import LinearRegression\n",
        "from sklearn.metrics import mean_absolute_error as mae\n",
        "import statsmodels.api as sm"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Import de dados\n",
        "df = pd.read_csv('https://raw.githubusercontent.com/DiogoWorkGit/Python_Notebooks/master/csv/pib.csv')\n",
        "print(df.columns)\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 377
        },
        "id": "JLLzETE7AQYo",
        "outputId": "57961a13-66ff-4f4a-98ae-9869a3a8cc24"
      },
      "execution_count": 82,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Index(['Unnamed: 0', 'ANO_MES', 'PIB', 'BRL', 'BRP', 'BRT', 'SLP', 'SPP',\n",
            "       'SPT', 'PRL', 'PRP', 'PRT', 'RJL', 'RJP', 'RJT', 'D1', 'D2', 'D3', 'D4',\n",
            "       'D5', 'D6', 'D7', 'D8', 'D9', 'D10', 'D11', 'PIBi1', 'PIBi2', 'PIBi3',\n",
            "       'PIBi4', 'PIBi5', 'PIBi6', 'PIBi7', 'PIBi8', 'PIBi9', 'PIBi10',\n",
            "       'PIBi11', 'PIBi12'],\n",
            "      dtype='object')\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Unnamed: 0 ANO_MES     PIB     BRL     BRP     BRT     SLP     SPP     SPT  \\\n",
              "0           1  jan/04  103.09  109.19  108.67  109.08  102.84  114.27  105.38   \n",
              "1           2  fev/04  102.05   95.65  104.52   97.63   90.76  109.83   94.99   \n",
              "2           3  mar/04  110.43   91.69  125.53   99.26   89.78  133.24   99.43   \n",
              "3           4  abr/04  106.77   95.36  118.34  100.49   94.58  123.55  101.02   \n",
              "4           5  mai/04  108.08   92.47  121.49   98.96   91.34  128.32   99.55   \n",
              "\n",
              "      PRL  ...   PIBi3   PIBi4   PIBi5   PIBi6   PIBi7   PIBi8   PIBi9  \\\n",
              "0  127.49  ...  106.27  104.52  102.59  102.24   99.96  101.93  101.17   \n",
              "1   96.60  ...  104.10  106.27  104.52  102.59  102.24   99.96  101.93   \n",
              "2   83.79  ...  103.91  104.10  106.27  104.52  102.59  102.24   99.96   \n",
              "3   91.79  ...  103.09  103.91  104.10  106.27  104.52  102.59  102.24   \n",
              "4   85.73  ...  102.05  103.09  103.91  104.10  106.27  104.52  102.59   \n",
              "\n",
              "   PIBi10  PIBi11  PIBi12  \n",
              "0  101.70  100.03  100.00  \n",
              "1  101.17  101.70  100.03  \n",
              "2  101.93  101.17  101.70  \n",
              "3   99.96  101.93  101.17  \n",
              "4  102.24   99.96  101.93  \n",
              "\n",
              "[5 rows x 38 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4b173438-9451-4642-971e-46bd995ca0e7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>ANO_MES</th>\n",
              "      <th>PIB</th>\n",
              "      <th>BRL</th>\n",
              "      <th>BRP</th>\n",
              "      <th>BRT</th>\n",
              "      <th>SLP</th>\n",
              "      <th>SPP</th>\n",
              "      <th>SPT</th>\n",
              "      <th>PRL</th>\n",
              "      <th>...</th>\n",
              "      <th>PIBi3</th>\n",
              "      <th>PIBi4</th>\n",
              "      <th>PIBi5</th>\n",
              "      <th>PIBi6</th>\n",
              "      <th>PIBi7</th>\n",
              "      <th>PIBi8</th>\n",
              "      <th>PIBi9</th>\n",
              "      <th>PIBi10</th>\n",
              "      <th>PIBi11</th>\n",
              "      <th>PIBi12</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>jan/04</td>\n",
              "      <td>103.09</td>\n",
              "      <td>109.19</td>\n",
              "      <td>108.67</td>\n",
              "      <td>109.08</td>\n",
              "      <td>102.84</td>\n",
              "      <td>114.27</td>\n",
              "      <td>105.38</td>\n",
              "      <td>127.49</td>\n",
              "      <td>...</td>\n",
              "      <td>106.27</td>\n",
              "      <td>104.52</td>\n",
              "      <td>102.59</td>\n",
              "      <td>102.24</td>\n",
              "      <td>99.96</td>\n",
              "      <td>101.93</td>\n",
              "      <td>101.17</td>\n",
              "      <td>101.70</td>\n",
              "      <td>100.03</td>\n",
              "      <td>100.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>fev/04</td>\n",
              "      <td>102.05</td>\n",
              "      <td>95.65</td>\n",
              "      <td>104.52</td>\n",
              "      <td>97.63</td>\n",
              "      <td>90.76</td>\n",
              "      <td>109.83</td>\n",
              "      <td>94.99</td>\n",
              "      <td>96.60</td>\n",
              "      <td>...</td>\n",
              "      <td>104.10</td>\n",
              "      <td>106.27</td>\n",
              "      <td>104.52</td>\n",
              "      <td>102.59</td>\n",
              "      <td>102.24</td>\n",
              "      <td>99.96</td>\n",
              "      <td>101.93</td>\n",
              "      <td>101.17</td>\n",
              "      <td>101.70</td>\n",
              "      <td>100.03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>mar/04</td>\n",
              "      <td>110.43</td>\n",
              "      <td>91.69</td>\n",
              "      <td>125.53</td>\n",
              "      <td>99.26</td>\n",
              "      <td>89.78</td>\n",
              "      <td>133.24</td>\n",
              "      <td>99.43</td>\n",
              "      <td>83.79</td>\n",
              "      <td>...</td>\n",
              "      <td>103.91</td>\n",
              "      <td>104.10</td>\n",
              "      <td>106.27</td>\n",
              "      <td>104.52</td>\n",
              "      <td>102.59</td>\n",
              "      <td>102.24</td>\n",
              "      <td>99.96</td>\n",
              "      <td>101.93</td>\n",
              "      <td>101.17</td>\n",
              "      <td>101.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>abr/04</td>\n",
              "      <td>106.77</td>\n",
              "      <td>95.36</td>\n",
              "      <td>118.34</td>\n",
              "      <td>100.49</td>\n",
              "      <td>94.58</td>\n",
              "      <td>123.55</td>\n",
              "      <td>101.02</td>\n",
              "      <td>91.79</td>\n",
              "      <td>...</td>\n",
              "      <td>103.09</td>\n",
              "      <td>103.91</td>\n",
              "      <td>104.10</td>\n",
              "      <td>106.27</td>\n",
              "      <td>104.52</td>\n",
              "      <td>102.59</td>\n",
              "      <td>102.24</td>\n",
              "      <td>99.96</td>\n",
              "      <td>101.93</td>\n",
              "      <td>101.17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>mai/04</td>\n",
              "      <td>108.08</td>\n",
              "      <td>92.47</td>\n",
              "      <td>121.49</td>\n",
              "      <td>98.96</td>\n",
              "      <td>91.34</td>\n",
              "      <td>128.32</td>\n",
              "      <td>99.55</td>\n",
              "      <td>85.73</td>\n",
              "      <td>...</td>\n",
              "      <td>102.05</td>\n",
              "      <td>103.09</td>\n",
              "      <td>103.91</td>\n",
              "      <td>104.10</td>\n",
              "      <td>106.27</td>\n",
              "      <td>104.52</td>\n",
              "      <td>102.59</td>\n",
              "      <td>102.24</td>\n",
              "      <td>99.96</td>\n",
              "      <td>101.93</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 38 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4b173438-9451-4642-971e-46bd995ca0e7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-4b173438-9451-4642-971e-46bd995ca0e7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-4b173438-9451-4642-971e-46bd995ca0e7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-758cfc9d-9233-478a-84d9-6423569a6fdd\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-758cfc9d-9233-478a-84d9-6423569a6fdd')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-758cfc9d-9233-478a-84d9-6423569a6fdd button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            }
          },
          "metadata": {},
          "execution_count": 82
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Separação de treino e teste\n",
        "treino = df.iloc[0:126]\n",
        "teste = df.iloc[126:138]"
      ],
      "metadata": {
        "id": "mvSMkUNhAdR-"
      },
      "execution_count": 83,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "treino"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 461
        },
        "id": "keBfSRI-i991",
        "outputId": "003a6320-19fa-449f-e86a-9bc263525473"
      },
      "execution_count": 84,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Unnamed: 0 ANO_MES     PIB     BRL     BRP     BRT     SLP     SPP  \\\n",
              "0             1  jan/04  103.09  109.19  108.67  109.08  102.84  114.27   \n",
              "1             2  fev/04  102.05   95.65  104.52   97.63   90.76  109.83   \n",
              "2             3  mar/04  110.43   91.69  125.53   99.26   89.78  133.24   \n",
              "3             4  abr/04  106.77   95.36  118.34  100.49   94.58  123.55   \n",
              "4             5  mai/04  108.08   92.47  121.49   98.96   91.34  128.32   \n",
              "..          ...     ...     ...     ...     ...     ...     ...     ...   \n",
              "121         122  fev/14  148.92  144.82  158.47  147.90  144.89  175.00   \n",
              "122         123  mar/14  151.44  155.45  161.32  155.91  158.85  176.87   \n",
              "123         124  abr/14  150.92  153.86  159.92  154.80  161.75  174.93   \n",
              "124         125  mai/14  154.49  149.68  165.52  152.97  154.98  181.95   \n",
              "125         126  jun/14  148.92  143.25  150.65  144.38  147.91  165.63   \n",
              "\n",
              "        SPT     PRL  ...   PIBi3   PIBi4   PIBi5   PIBi6   PIBi7   PIBi8  \\\n",
              "0    105.38  127.49  ...  106.27  104.52  102.59  102.24   99.96  101.93   \n",
              "1     94.99   96.60  ...  104.10  106.27  104.52  102.59  102.24   99.96   \n",
              "2     99.43   83.79  ...  103.91  104.10  106.27  104.52  102.59  102.24   \n",
              "3    101.02   91.79  ...  103.09  103.91  104.10  106.27  104.52  102.59   \n",
              "4     99.55   85.73  ...  102.05  103.09  103.91  104.10  106.27  104.52   \n",
              "..      ...     ...  ...     ...     ...     ...     ...     ...     ...   \n",
              "121  151.58  149.35  ...  153.20  156.88  153.50  156.98  156.05  151.42   \n",
              "122  162.66  163.40  ...  150.30  153.20  156.88  153.50  156.98  156.05   \n",
              "123  164.35  169.39  ...  151.43  150.30  153.20  156.88  153.50  156.98   \n",
              "124  160.56  150.83  ...  148.92  151.43  150.30  153.20  156.88  153.50   \n",
              "125  151.06  143.93  ...  151.44  148.92  151.43  150.30  153.20  156.88   \n",
              "\n",
              "      PIBi9  PIBi10  PIBi11  PIBi12  \n",
              "0    101.17  101.70  100.03  100.00  \n",
              "1    101.93  101.17  101.70  100.03  \n",
              "2     99.96  101.93  101.17  101.70  \n",
              "3    102.24   99.96  101.93  101.17  \n",
              "4    102.59  102.24   99.96  101.93  \n",
              "..      ...     ...     ...     ...  \n",
              "121  153.36  151.20  149.35  142.18  \n",
              "122  151.42  153.36  151.20  149.35  \n",
              "123  156.05  151.42  153.36  151.20  \n",
              "124  156.98  156.05  151.42  153.36  \n",
              "125  153.50  156.98  156.05  151.42  \n",
              "\n",
              "[126 rows x 38 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e9333849-e468-4901-87ef-8a25fefbed13\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>ANO_MES</th>\n",
              "      <th>PIB</th>\n",
              "      <th>BRL</th>\n",
              "      <th>BRP</th>\n",
              "      <th>BRT</th>\n",
              "      <th>SLP</th>\n",
              "      <th>SPP</th>\n",
              "      <th>SPT</th>\n",
              "      <th>PRL</th>\n",
              "      <th>...</th>\n",
              "      <th>PIBi3</th>\n",
              "      <th>PIBi4</th>\n",
              "      <th>PIBi5</th>\n",
              "      <th>PIBi6</th>\n",
              "      <th>PIBi7</th>\n",
              "      <th>PIBi8</th>\n",
              "      <th>PIBi9</th>\n",
              "      <th>PIBi10</th>\n",
              "      <th>PIBi11</th>\n",
              "      <th>PIBi12</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>jan/04</td>\n",
              "      <td>103.09</td>\n",
              "      <td>109.19</td>\n",
              "      <td>108.67</td>\n",
              "      <td>109.08</td>\n",
              "      <td>102.84</td>\n",
              "      <td>114.27</td>\n",
              "      <td>105.38</td>\n",
              "      <td>127.49</td>\n",
              "      <td>...</td>\n",
              "      <td>106.27</td>\n",
              "      <td>104.52</td>\n",
              "      <td>102.59</td>\n",
              "      <td>102.24</td>\n",
              "      <td>99.96</td>\n",
              "      <td>101.93</td>\n",
              "      <td>101.17</td>\n",
              "      <td>101.70</td>\n",
              "      <td>100.03</td>\n",
              "      <td>100.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>fev/04</td>\n",
              "      <td>102.05</td>\n",
              "      <td>95.65</td>\n",
              "      <td>104.52</td>\n",
              "      <td>97.63</td>\n",
              "      <td>90.76</td>\n",
              "      <td>109.83</td>\n",
              "      <td>94.99</td>\n",
              "      <td>96.60</td>\n",
              "      <td>...</td>\n",
              "      <td>104.10</td>\n",
              "      <td>106.27</td>\n",
              "      <td>104.52</td>\n",
              "      <td>102.59</td>\n",
              "      <td>102.24</td>\n",
              "      <td>99.96</td>\n",
              "      <td>101.93</td>\n",
              "      <td>101.17</td>\n",
              "      <td>101.70</td>\n",
              "      <td>100.03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>mar/04</td>\n",
              "      <td>110.43</td>\n",
              "      <td>91.69</td>\n",
              "      <td>125.53</td>\n",
              "      <td>99.26</td>\n",
              "      <td>89.78</td>\n",
              "      <td>133.24</td>\n",
              "      <td>99.43</td>\n",
              "      <td>83.79</td>\n",
              "      <td>...</td>\n",
              "      <td>103.91</td>\n",
              "      <td>104.10</td>\n",
              "      <td>106.27</td>\n",
              "      <td>104.52</td>\n",
              "      <td>102.59</td>\n",
              "      <td>102.24</td>\n",
              "      <td>99.96</td>\n",
              "      <td>101.93</td>\n",
              "      <td>101.17</td>\n",
              "      <td>101.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>abr/04</td>\n",
              "      <td>106.77</td>\n",
              "      <td>95.36</td>\n",
              "      <td>118.34</td>\n",
              "      <td>100.49</td>\n",
              "      <td>94.58</td>\n",
              "      <td>123.55</td>\n",
              "      <td>101.02</td>\n",
              "      <td>91.79</td>\n",
              "      <td>...</td>\n",
              "      <td>103.09</td>\n",
              "      <td>103.91</td>\n",
              "      <td>104.10</td>\n",
              "      <td>106.27</td>\n",
              "      <td>104.52</td>\n",
              "      <td>102.59</td>\n",
              "      <td>102.24</td>\n",
              "      <td>99.96</td>\n",
              "      <td>101.93</td>\n",
              "      <td>101.17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>mai/04</td>\n",
              "      <td>108.08</td>\n",
              "      <td>92.47</td>\n",
              "      <td>121.49</td>\n",
              "      <td>98.96</td>\n",
              "      <td>91.34</td>\n",
              "      <td>128.32</td>\n",
              "      <td>99.55</td>\n",
              "      <td>85.73</td>\n",
              "      <td>...</td>\n",
              "      <td>102.05</td>\n",
              "      <td>103.09</td>\n",
              "      <td>103.91</td>\n",
              "      <td>104.10</td>\n",
              "      <td>106.27</td>\n",
              "      <td>104.52</td>\n",
              "      <td>102.59</td>\n",
              "      <td>102.24</td>\n",
              "      <td>99.96</td>\n",
              "      <td>101.93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>121</th>\n",
              "      <td>122</td>\n",
              "      <td>fev/14</td>\n",
              "      <td>148.92</td>\n",
              "      <td>144.82</td>\n",
              "      <td>158.47</td>\n",
              "      <td>147.90</td>\n",
              "      <td>144.89</td>\n",
              "      <td>175.00</td>\n",
              "      <td>151.58</td>\n",
              "      <td>149.35</td>\n",
              "      <td>...</td>\n",
              "      <td>153.20</td>\n",
              "      <td>156.88</td>\n",
              "      <td>153.50</td>\n",
              "      <td>156.98</td>\n",
              "      <td>156.05</td>\n",
              "      <td>151.42</td>\n",
              "      <td>153.36</td>\n",
              "      <td>151.20</td>\n",
              "      <td>149.35</td>\n",
              "      <td>142.18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>122</th>\n",
              "      <td>123</td>\n",
              "      <td>mar/14</td>\n",
              "      <td>151.44</td>\n",
              "      <td>155.45</td>\n",
              "      <td>161.32</td>\n",
              "      <td>155.91</td>\n",
              "      <td>158.85</td>\n",
              "      <td>176.87</td>\n",
              "      <td>162.66</td>\n",
              "      <td>163.40</td>\n",
              "      <td>...</td>\n",
              "      <td>150.30</td>\n",
              "      <td>153.20</td>\n",
              "      <td>156.88</td>\n",
              "      <td>153.50</td>\n",
              "      <td>156.98</td>\n",
              "      <td>156.05</td>\n",
              "      <td>151.42</td>\n",
              "      <td>153.36</td>\n",
              "      <td>151.20</td>\n",
              "      <td>149.35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>123</th>\n",
              "      <td>124</td>\n",
              "      <td>abr/14</td>\n",
              "      <td>150.92</td>\n",
              "      <td>153.86</td>\n",
              "      <td>159.92</td>\n",
              "      <td>154.80</td>\n",
              "      <td>161.75</td>\n",
              "      <td>174.93</td>\n",
              "      <td>164.35</td>\n",
              "      <td>169.39</td>\n",
              "      <td>...</td>\n",
              "      <td>151.43</td>\n",
              "      <td>150.30</td>\n",
              "      <td>153.20</td>\n",
              "      <td>156.88</td>\n",
              "      <td>153.50</td>\n",
              "      <td>156.98</td>\n",
              "      <td>156.05</td>\n",
              "      <td>151.42</td>\n",
              "      <td>153.36</td>\n",
              "      <td>151.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>124</th>\n",
              "      <td>125</td>\n",
              "      <td>mai/14</td>\n",
              "      <td>154.49</td>\n",
              "      <td>149.68</td>\n",
              "      <td>165.52</td>\n",
              "      <td>152.97</td>\n",
              "      <td>154.98</td>\n",
              "      <td>181.95</td>\n",
              "      <td>160.56</td>\n",
              "      <td>150.83</td>\n",
              "      <td>...</td>\n",
              "      <td>148.92</td>\n",
              "      <td>151.43</td>\n",
              "      <td>150.30</td>\n",
              "      <td>153.20</td>\n",
              "      <td>156.88</td>\n",
              "      <td>153.50</td>\n",
              "      <td>156.98</td>\n",
              "      <td>156.05</td>\n",
              "      <td>151.42</td>\n",
              "      <td>153.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>125</th>\n",
              "      <td>126</td>\n",
              "      <td>jun/14</td>\n",
              "      <td>148.92</td>\n",
              "      <td>143.25</td>\n",
              "      <td>150.65</td>\n",
              "      <td>144.38</td>\n",
              "      <td>147.91</td>\n",
              "      <td>165.63</td>\n",
              "      <td>151.06</td>\n",
              "      <td>143.93</td>\n",
              "      <td>...</td>\n",
              "      <td>151.44</td>\n",
              "      <td>148.92</td>\n",
              "      <td>151.43</td>\n",
              "      <td>150.30</td>\n",
              "      <td>153.20</td>\n",
              "      <td>156.88</td>\n",
              "      <td>153.50</td>\n",
              "      <td>156.98</td>\n",
              "      <td>156.05</td>\n",
              "      <td>151.42</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>126 rows × 38 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e9333849-e468-4901-87ef-8a25fefbed13')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e9333849-e468-4901-87ef-8a25fefbed13 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e9333849-e468-4901-87ef-8a25fefbed13');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-3f956780-e6b1-4f38-b2c5-59477dc49206\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3f956780-e6b1-4f38-b2c5-59477dc49206')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-3f956780-e6b1-4f38-b2c5-59477dc49206 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_fea683a8-abe1-4928-8225-e2ef401201db\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('treino')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_fea683a8-abe1-4928-8225-e2ef401201db button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('treino');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "treino"
            }
          },
          "metadata": {},
          "execution_count": 84
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "teste"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 492
        },
        "id": "LfUdk3AFi957",
        "outputId": "e0c16baf-9527-4efa-c709-36cdadc49d18"
      },
      "execution_count": 85,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Unnamed: 0 ANO_MES     PIB     BRL     BRP     BRT     SLP     SPP  \\\n",
              "126         127  jul/14  154.34  150.55  165.58  153.80  154.34  181.79   \n",
              "127         128  ago/14  154.75  157.10  165.43  158.42  162.93  183.95   \n",
              "128         129  set/14  154.04  150.24  165.35  153.34  155.18  184.73   \n",
              "129         130  out/14  156.65  158.52  174.27  161.88  164.71  195.26   \n",
              "130         131  nov/14  151.46  157.98  159.69  157.81  163.41  177.27   \n",
              "131         132  dez/14  150.70  182.16  153.09  174.97  183.72  168.95   \n",
              "132         133  jan/15  149.51  177.84  147.92  170.73  175.22  161.17   \n",
              "133         134  fev/15  144.42  147.35  133.73  143.57  147.81  148.96   \n",
              "134         135  mar/15  151.68  149.64  163.27  152.09  154.87  179.07   \n",
              "135         136  abr/15  147.03  153.81  149.93  152.28  161.21  164.74   \n",
              "136         137  mai/15  148.94  149.66  153.03  149.82  157.03  169.39   \n",
              "137         138  jun/15  147.37  146.13  147.98  145.84  152.96  162.92   \n",
              "\n",
              "        SPT     PRL  ...   PIBi3   PIBi4   PIBi5   PIBi6   PIBi7   PIBi8  \\\n",
              "126  159.98  160.34  ...  150.92  151.44  148.92  151.43  150.30  153.20   \n",
              "127  167.07  157.24  ...  154.49  150.92  151.44  148.92  151.43  150.30   \n",
              "128  161.62  153.14  ...  148.92  154.49  150.92  151.44  148.92  151.43   \n",
              "129  170.61  159.38  ...  154.34  148.92  154.49  150.92  151.44  148.92   \n",
              "130  165.67  161.48  ...  154.75  154.34  148.92  154.49  150.92  151.44   \n",
              "131  179.56  216.89  ...  154.04  154.75  154.34  148.92  154.49  150.92   \n",
              "132  171.35  226.95  ...  156.65  154.04  154.75  154.34  148.92  154.49   \n",
              "133  147.54  157.30  ...  151.46  156.65  154.04  154.75  154.34  148.92   \n",
              "134  159.56  147.28  ...  150.70  151.46  156.65  154.04  154.75  154.34   \n",
              "135  161.16  162.21  ...  149.51  150.70  151.46  156.65  154.04  154.75   \n",
              "136  158.76  149.06  ...  144.42  149.51  150.70  151.46  156.65  154.04   \n",
              "137  153.86  144.14  ...  151.68  144.42  149.51  150.70  151.46  156.65   \n",
              "\n",
              "      PIBi9  PIBi10  PIBi11  PIBi12  \n",
              "126  156.88  153.50  156.98  156.05  \n",
              "127  153.20  156.88  153.50  156.98  \n",
              "128  150.30  153.20  156.88  153.50  \n",
              "129  151.43  150.30  153.20  156.88  \n",
              "130  148.92  151.43  150.30  153.20  \n",
              "131  151.44  148.92  151.43  150.30  \n",
              "132  150.92  151.44  148.92  151.43  \n",
              "133  154.49  150.92  151.44  148.92  \n",
              "134  148.92  154.49  150.92  151.44  \n",
              "135  154.34  148.92  154.49  150.92  \n",
              "136  154.75  154.34  148.92  154.49  \n",
              "137  154.04  154.75  154.34  148.92  \n",
              "\n",
              "[12 rows x 38 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bfd3e6bc-b8f1-4749-8d1a-9c893f874184\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>ANO_MES</th>\n",
              "      <th>PIB</th>\n",
              "      <th>BRL</th>\n",
              "      <th>BRP</th>\n",
              "      <th>BRT</th>\n",
              "      <th>SLP</th>\n",
              "      <th>SPP</th>\n",
              "      <th>SPT</th>\n",
              "      <th>PRL</th>\n",
              "      <th>...</th>\n",
              "      <th>PIBi3</th>\n",
              "      <th>PIBi4</th>\n",
              "      <th>PIBi5</th>\n",
              "      <th>PIBi6</th>\n",
              "      <th>PIBi7</th>\n",
              "      <th>PIBi8</th>\n",
              "      <th>PIBi9</th>\n",
              "      <th>PIBi10</th>\n",
              "      <th>PIBi11</th>\n",
              "      <th>PIBi12</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>126</th>\n",
              "      <td>127</td>\n",
              "      <td>jul/14</td>\n",
              "      <td>154.34</td>\n",
              "      <td>150.55</td>\n",
              "      <td>165.58</td>\n",
              "      <td>153.80</td>\n",
              "      <td>154.34</td>\n",
              "      <td>181.79</td>\n",
              "      <td>159.98</td>\n",
              "      <td>160.34</td>\n",
              "      <td>...</td>\n",
              "      <td>150.92</td>\n",
              "      <td>151.44</td>\n",
              "      <td>148.92</td>\n",
              "      <td>151.43</td>\n",
              "      <td>150.30</td>\n",
              "      <td>153.20</td>\n",
              "      <td>156.88</td>\n",
              "      <td>153.50</td>\n",
              "      <td>156.98</td>\n",
              "      <td>156.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>127</th>\n",
              "      <td>128</td>\n",
              "      <td>ago/14</td>\n",
              "      <td>154.75</td>\n",
              "      <td>157.10</td>\n",
              "      <td>165.43</td>\n",
              "      <td>158.42</td>\n",
              "      <td>162.93</td>\n",
              "      <td>183.95</td>\n",
              "      <td>167.07</td>\n",
              "      <td>157.24</td>\n",
              "      <td>...</td>\n",
              "      <td>154.49</td>\n",
              "      <td>150.92</td>\n",
              "      <td>151.44</td>\n",
              "      <td>148.92</td>\n",
              "      <td>151.43</td>\n",
              "      <td>150.30</td>\n",
              "      <td>153.20</td>\n",
              "      <td>156.88</td>\n",
              "      <td>153.50</td>\n",
              "      <td>156.98</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>128</th>\n",
              "      <td>129</td>\n",
              "      <td>set/14</td>\n",
              "      <td>154.04</td>\n",
              "      <td>150.24</td>\n",
              "      <td>165.35</td>\n",
              "      <td>153.34</td>\n",
              "      <td>155.18</td>\n",
              "      <td>184.73</td>\n",
              "      <td>161.62</td>\n",
              "      <td>153.14</td>\n",
              "      <td>...</td>\n",
              "      <td>148.92</td>\n",
              "      <td>154.49</td>\n",
              "      <td>150.92</td>\n",
              "      <td>151.44</td>\n",
              "      <td>148.92</td>\n",
              "      <td>151.43</td>\n",
              "      <td>150.30</td>\n",
              "      <td>153.20</td>\n",
              "      <td>156.88</td>\n",
              "      <td>153.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>129</th>\n",
              "      <td>130</td>\n",
              "      <td>out/14</td>\n",
              "      <td>156.65</td>\n",
              "      <td>158.52</td>\n",
              "      <td>174.27</td>\n",
              "      <td>161.88</td>\n",
              "      <td>164.71</td>\n",
              "      <td>195.26</td>\n",
              "      <td>170.61</td>\n",
              "      <td>159.38</td>\n",
              "      <td>...</td>\n",
              "      <td>154.34</td>\n",
              "      <td>148.92</td>\n",
              "      <td>154.49</td>\n",
              "      <td>150.92</td>\n",
              "      <td>151.44</td>\n",
              "      <td>148.92</td>\n",
              "      <td>151.43</td>\n",
              "      <td>150.30</td>\n",
              "      <td>153.20</td>\n",
              "      <td>156.88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>130</th>\n",
              "      <td>131</td>\n",
              "      <td>nov/14</td>\n",
              "      <td>151.46</td>\n",
              "      <td>157.98</td>\n",
              "      <td>159.69</td>\n",
              "      <td>157.81</td>\n",
              "      <td>163.41</td>\n",
              "      <td>177.27</td>\n",
              "      <td>165.67</td>\n",
              "      <td>161.48</td>\n",
              "      <td>...</td>\n",
              "      <td>154.75</td>\n",
              "      <td>154.34</td>\n",
              "      <td>148.92</td>\n",
              "      <td>154.49</td>\n",
              "      <td>150.92</td>\n",
              "      <td>151.44</td>\n",
              "      <td>148.92</td>\n",
              "      <td>151.43</td>\n",
              "      <td>150.30</td>\n",
              "      <td>153.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>131</th>\n",
              "      <td>132</td>\n",
              "      <td>dez/14</td>\n",
              "      <td>150.70</td>\n",
              "      <td>182.16</td>\n",
              "      <td>153.09</td>\n",
              "      <td>174.97</td>\n",
              "      <td>183.72</td>\n",
              "      <td>168.95</td>\n",
              "      <td>179.56</td>\n",
              "      <td>216.89</td>\n",
              "      <td>...</td>\n",
              "      <td>154.04</td>\n",
              "      <td>154.75</td>\n",
              "      <td>154.34</td>\n",
              "      <td>148.92</td>\n",
              "      <td>154.49</td>\n",
              "      <td>150.92</td>\n",
              "      <td>151.44</td>\n",
              "      <td>148.92</td>\n",
              "      <td>151.43</td>\n",
              "      <td>150.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>132</th>\n",
              "      <td>133</td>\n",
              "      <td>jan/15</td>\n",
              "      <td>149.51</td>\n",
              "      <td>177.84</td>\n",
              "      <td>147.92</td>\n",
              "      <td>170.73</td>\n",
              "      <td>175.22</td>\n",
              "      <td>161.17</td>\n",
              "      <td>171.35</td>\n",
              "      <td>226.95</td>\n",
              "      <td>...</td>\n",
              "      <td>156.65</td>\n",
              "      <td>154.04</td>\n",
              "      <td>154.75</td>\n",
              "      <td>154.34</td>\n",
              "      <td>148.92</td>\n",
              "      <td>154.49</td>\n",
              "      <td>150.92</td>\n",
              "      <td>151.44</td>\n",
              "      <td>148.92</td>\n",
              "      <td>151.43</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>133</th>\n",
              "      <td>134</td>\n",
              "      <td>fev/15</td>\n",
              "      <td>144.42</td>\n",
              "      <td>147.35</td>\n",
              "      <td>133.73</td>\n",
              "      <td>143.57</td>\n",
              "      <td>147.81</td>\n",
              "      <td>148.96</td>\n",
              "      <td>147.54</td>\n",
              "      <td>157.30</td>\n",
              "      <td>...</td>\n",
              "      <td>151.46</td>\n",
              "      <td>156.65</td>\n",
              "      <td>154.04</td>\n",
              "      <td>154.75</td>\n",
              "      <td>154.34</td>\n",
              "      <td>148.92</td>\n",
              "      <td>154.49</td>\n",
              "      <td>150.92</td>\n",
              "      <td>151.44</td>\n",
              "      <td>148.92</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>134</th>\n",
              "      <td>135</td>\n",
              "      <td>mar/15</td>\n",
              "      <td>151.68</td>\n",
              "      <td>149.64</td>\n",
              "      <td>163.27</td>\n",
              "      <td>152.09</td>\n",
              "      <td>154.87</td>\n",
              "      <td>179.07</td>\n",
              "      <td>159.56</td>\n",
              "      <td>147.28</td>\n",
              "      <td>...</td>\n",
              "      <td>150.70</td>\n",
              "      <td>151.46</td>\n",
              "      <td>156.65</td>\n",
              "      <td>154.04</td>\n",
              "      <td>154.75</td>\n",
              "      <td>154.34</td>\n",
              "      <td>148.92</td>\n",
              "      <td>154.49</td>\n",
              "      <td>150.92</td>\n",
              "      <td>151.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>135</th>\n",
              "      <td>136</td>\n",
              "      <td>abr/15</td>\n",
              "      <td>147.03</td>\n",
              "      <td>153.81</td>\n",
              "      <td>149.93</td>\n",
              "      <td>152.28</td>\n",
              "      <td>161.21</td>\n",
              "      <td>164.74</td>\n",
              "      <td>161.16</td>\n",
              "      <td>162.21</td>\n",
              "      <td>...</td>\n",
              "      <td>149.51</td>\n",
              "      <td>150.70</td>\n",
              "      <td>151.46</td>\n",
              "      <td>156.65</td>\n",
              "      <td>154.04</td>\n",
              "      <td>154.75</td>\n",
              "      <td>154.34</td>\n",
              "      <td>148.92</td>\n",
              "      <td>154.49</td>\n",
              "      <td>150.92</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>136</th>\n",
              "      <td>137</td>\n",
              "      <td>mai/15</td>\n",
              "      <td>148.94</td>\n",
              "      <td>149.66</td>\n",
              "      <td>153.03</td>\n",
              "      <td>149.82</td>\n",
              "      <td>157.03</td>\n",
              "      <td>169.39</td>\n",
              "      <td>158.76</td>\n",
              "      <td>149.06</td>\n",
              "      <td>...</td>\n",
              "      <td>144.42</td>\n",
              "      <td>149.51</td>\n",
              "      <td>150.70</td>\n",
              "      <td>151.46</td>\n",
              "      <td>156.65</td>\n",
              "      <td>154.04</td>\n",
              "      <td>154.75</td>\n",
              "      <td>154.34</td>\n",
              "      <td>148.92</td>\n",
              "      <td>154.49</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>137</th>\n",
              "      <td>138</td>\n",
              "      <td>jun/15</td>\n",
              "      <td>147.37</td>\n",
              "      <td>146.13</td>\n",
              "      <td>147.98</td>\n",
              "      <td>145.84</td>\n",
              "      <td>152.96</td>\n",
              "      <td>162.92</td>\n",
              "      <td>153.86</td>\n",
              "      <td>144.14</td>\n",
              "      <td>...</td>\n",
              "      <td>151.68</td>\n",
              "      <td>144.42</td>\n",
              "      <td>149.51</td>\n",
              "      <td>150.70</td>\n",
              "      <td>151.46</td>\n",
              "      <td>156.65</td>\n",
              "      <td>154.04</td>\n",
              "      <td>154.75</td>\n",
              "      <td>154.34</td>\n",
              "      <td>148.92</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>12 rows × 38 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bfd3e6bc-b8f1-4749-8d1a-9c893f874184')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-bfd3e6bc-b8f1-4749-8d1a-9c893f874184 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-bfd3e6bc-b8f1-4749-8d1a-9c893f874184');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f0072e97-8576-4661-8dc4-6246c4443a13\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f0072e97-8576-4661-8dc4-6246c4443a13')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f0072e97-8576-4661-8dc4-6246c4443a13 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_b08c7a7c-3be4-4509-ab4a-93f9a78d5fd4\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('teste')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_b08c7a7c-3be4-4509-ab4a-93f9a78d5fd4 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('teste');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "teste"
            }
          },
          "metadata": {},
          "execution_count": 85
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Cálculo de previsão\n",
        "\n",
        "Formúla para modelos de previsão para **conjuto duplo de váriaveis**\n",
        "\n",
        "## $$f(y) = a*x + b $$\n",
        "\n",
        "Formúla para modelos de previsão para **conjuto triplo ou maior** de váriaveis\n",
        "\n",
        "## $$f(y) = (a1*x1) + ... + (an*xn) + b $$\n",
        "\n",
        "\n",
        "Legenda:\n",
        "- y = Váriavel a ser prevista\n",
        "- a = Coeficiente angular da regressão\n",
        "- x = Váriavel de relação\n",
        "- b = Coeficiente intercepto"
      ],
      "metadata": {
        "id": "jZXUwPemdgaA"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Modelo preditivo PIB p/ BRL"
      ],
      "metadata": {
        "id": "AakZuvMJgADL"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Regressão\n",
        "\n",
        "# Y recebe PIB - X recebe BRL\n",
        "y_treino = treino[['PIB']]\n",
        "x_treino = treino[['BRL']]\n",
        "\n",
        "y_teste = teste[['PIB']]\n",
        "x_teste = teste[['BRL']]\n",
        "\n",
        "# Criação do modelo de regressão\n",
        "mod = LinearRegression()\n",
        "mod.fit(X=x_treino, y=y_treino)\n",
        "\n",
        "# Analise dos coeficientes da Regressão\n",
        "print(mod.coef_) #Coeficiente\n",
        "print(mod.intercept_) #Intercepto"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aQeQRAmUBUxv",
        "outputId": "cd74f1b4-e816-4563-e09b-cd2a967ed31c"
      },
      "execution_count": 86,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[0.64930687]]\n",
            "[51.97004633]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Formula preditiva para modelo PIB p/ BRL\n",
        "\n",
        "\n",
        "### $$ f(x) = a ∗ x + b $$\n",
        "\n",
        "### $$ f(PIB) = a * BRL + b $$\n",
        "\n",
        "### $$ f(PIB) = 0.64 * BRL * 51.97 $$"
      ],
      "metadata": {
        "id": "dmSbx5bRgtUk"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "jul14= df.query(\"ANO_MES == 'jul/14'\")[['PIB','BRL']]\n",
        "#tst= df.iloc[0][['PIB','BRL']]\n",
        "jul14"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 89
        },
        "id": "q7CPmAK6ixvn",
        "outputId": "0ac9fdbf-1f1c-48bf-d947-6f695328da03"
      },
      "execution_count": 87,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        PIB     BRL\n",
              "126  154.34  150.55"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9f5cca93-60ea-4e15-ade9-7def77c69387\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PIB</th>\n",
              "      <th>BRL</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>126</th>\n",
              "      <td>154.34</td>\n",
              "      <td>150.55</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9f5cca93-60ea-4e15-ade9-7def77c69387')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9f5cca93-60ea-4e15-ade9-7def77c69387 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9f5cca93-60ea-4e15-ade9-7def77c69387');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "  <div id=\"id_0f4b38d1-0af7-41b8-9b0a-207d2b69ff4a\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('jul14')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_0f4b38d1-0af7-41b8-9b0a-207d2b69ff4a button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('jul14');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "jul14",
              "summary": "{\n  \"name\": \"jul14\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"PIB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 154.34,\n        \"max\": 154.34,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          154.34\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BRL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 150.55,\n        \"max\": 150.55,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          150.55\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 87
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Previsão manualmente\n",
        "\n",
        "PIBJUL14 = 0.64 * list(jul14['BRL'])[0] + 51.97\n",
        "\n",
        "# Valor do calculo de previsão do PIB para o mês de Julho de 2014\n",
        "print(PIBJUL14)\n",
        "\n",
        "# Valor real\n",
        "print(list(jul14['PIB'])[0])\n",
        "\n",
        "# Erro da previsão (VALOR REAL - VALOR PREVISTO)\n",
        "list(jul14['PIB'])[0] - PIBJUL14\n",
        "\n",
        "\n",
        "# Previsão somente dos valores de julho de 2014"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jRQVGrcNdgJz",
        "outputId": "d48887b1-8048-4539-ea8a-b84277ffbb5c"
      },
      "execution_count": 88,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "148.322\n",
            "154.34\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "6.018000000000001"
            ]
          },
          "metadata": {},
          "execution_count": 88
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Previsão com formula linear_model\n",
        "y_prev = mod.predict(x_teste)\n",
        "\n",
        "y_teste['PIB_prev'] = y_prev\n",
        "y_teste['Erro_previsao'] = np.abs(y_teste['PIB'] - y_teste['PIB_prev'])\n",
        "y_teste"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 634
        },
        "id": "3KV5Y6PgdWTA",
        "outputId": "55b7556e-8052-4895-90a4-25b89cff0834"
      },
      "execution_count": 89,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-89-a89e132d7634>:4: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  y_teste['PIB_prev'] = y_prev\n",
            "<ipython-input-89-a89e132d7634>:5: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  y_teste['Erro_previsao'] = np.abs(y_teste['PIB'] - y_teste['PIB_prev'])\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        PIB    PIB_prev  Erro_previsao\n",
              "126  154.34  149.723196       4.616804\n",
              "127  154.75  153.976156       0.773844\n",
              "128  154.04  149.521911       4.518089\n",
              "129  156.65  154.898172       1.751828\n",
              "130  151.46  154.547546       3.087546\n",
              "131  150.70  170.247786      19.547786\n",
              "132  149.51  167.442781      17.932781\n",
              "133  144.42  147.645414       3.225414\n",
              "134  151.68  149.132327       2.547673\n",
              "135  147.03  151.839937       4.809937\n",
              "136  148.94  149.145313       0.205313\n",
              "137  147.37  146.853260       0.516740"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9d6ee3bf-b180-4ecc-9492-ecf8824bb6db\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PIB</th>\n",
              "      <th>PIB_prev</th>\n",
              "      <th>Erro_previsao</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>126</th>\n",
              "      <td>154.34</td>\n",
              "      <td>149.723196</td>\n",
              "      <td>4.616804</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>127</th>\n",
              "      <td>154.75</td>\n",
              "      <td>153.976156</td>\n",
              "      <td>0.773844</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>128</th>\n",
              "      <td>154.04</td>\n",
              "      <td>149.521911</td>\n",
              "      <td>4.518089</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>129</th>\n",
              "      <td>156.65</td>\n",
              "      <td>154.898172</td>\n",
              "      <td>1.751828</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>130</th>\n",
              "      <td>151.46</td>\n",
              "      <td>154.547546</td>\n",
              "      <td>3.087546</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>131</th>\n",
              "      <td>150.70</td>\n",
              "      <td>170.247786</td>\n",
              "      <td>19.547786</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>132</th>\n",
              "      <td>149.51</td>\n",
              "      <td>167.442781</td>\n",
              "      <td>17.932781</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>133</th>\n",
              "      <td>144.42</td>\n",
              "      <td>147.645414</td>\n",
              "      <td>3.225414</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>134</th>\n",
              "      <td>151.68</td>\n",
              "      <td>149.132327</td>\n",
              "      <td>2.547673</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>135</th>\n",
              "      <td>147.03</td>\n",
              "      <td>151.839937</td>\n",
              "      <td>4.809937</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>136</th>\n",
              "      <td>148.94</td>\n",
              "      <td>149.145313</td>\n",
              "      <td>0.205313</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>137</th>\n",
              "      <td>147.37</td>\n",
              "      <td>146.853260</td>\n",
              "      <td>0.516740</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9d6ee3bf-b180-4ecc-9492-ecf8824bb6db')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9d6ee3bf-b180-4ecc-9492-ecf8824bb6db button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9d6ee3bf-b180-4ecc-9492-ecf8824bb6db');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e60f8096-c468-4ce9-bc2d-f77737fc50ea\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e60f8096-c468-4ce9-bc2d-f77737fc50ea')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e60f8096-c468-4ce9-bc2d-f77737fc50ea button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_204c52ed-520b-45c2-a29e-c5634227009b\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('y_teste')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_204c52ed-520b-45c2-a29e-c5634227009b button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('y_teste');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "y_teste",
              "summary": "{\n  \"name\": \"y_teste\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"PIB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.639947864261998,\n        \"min\": 144.42,\n        \"max\": 156.65,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          148.94,\n          147.03,\n          154.34\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PIB_prev\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.548461246330273,\n        \"min\": 146.8532598230707,\n        \"max\": 170.24778649165296,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          149.14531308813025,\n          151.8399366150416,\n          149.7231962059498\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Erro_previsao\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.484875370241197,\n        \"min\": 0.20531308813025362,\n        \"max\": 19.54778649165297,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          0.20531308813025362,\n          4.809936615041607,\n          4.616803794050213\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 89
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Erro médio da previsão\n",
        "\n",
        "np.mean(y_teste.Erro_previsao)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "u9HHonwudWQF",
        "outputId": "58fd469d-dc81-495a-96c9-3c42e625e67f"
      },
      "execution_count": 91,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "5.294479600275532"
            ]
          },
          "metadata": {},
          "execution_count": 91
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Outra forma de calcular o erro da previsão é com o sklearn.metrics usando a função mean_absolute_error\n",
        "# Passando os valores reais e os valores de previsão\n",
        "\n",
        "mae(y_teste.PIB, y_prev)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wO3jVtBydV0B",
        "outputId": "8ad24057-df53-4a34-d64f-7086c333c298"
      },
      "execution_count": 95,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "5.294479600275532"
            ]
          },
          "metadata": {},
          "execution_count": 95
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Exercicio para práticar\n",
        "\n",
        "Agora com esse conhecimentos, teste outros conjuntos de váriaveis no seus modelos preditivos para verificar quais são as melhores relações para prever o PIB, com o menor erro de previsão.\n",
        "\n",
        "Pegue os seguintes valores e forme uma tabela para comparando cada modelo:\n",
        "\n",
        "1. R² (chegue mais próximo de 1)\n",
        "2. P-valor (menor que 0.05)\n",
        "3. Erro Treino (quanto menor, melhor)\n",
        "4. Erro de teste absoluto (quanto menor, melhor)\n",
        "\n",
        "Use somente as colunas referentes ao tempo, PIB, Brasil, São Paulo, Rio de Janeiro, Paraná"
      ],
      "metadata": {
        "id": "CJotIgwjt-uq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Vamos separar nossas colunas\n",
        "data = df[df.columns[1:14]].copy()\n",
        "\n",
        "# Vamos avaliar a correlações entre as váriaveis\n",
        "data.corr(numeric_only=True).style.background_gradient(cmap='coolwarm')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 426
        },
        "id": "swtGUQL0wZ-p",
        "outputId": "aef62edd-57b2-499e-b903-97202d0962ff"
      },
      "execution_count": 108,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x78a6fb57a170>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_0653e_row0_col0, #T_0653e_row1_col1, #T_0653e_row2_col2, #T_0653e_row3_col3, #T_0653e_row4_col4, #T_0653e_row5_col5, #T_0653e_row6_col6, #T_0653e_row7_col7, #T_0653e_row8_col8, #T_0653e_row9_col9, #T_0653e_row10_col10, #T_0653e_row11_col11 {\n",
              "  background-color: #b40426;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row0_col1 {\n",
              "  background-color: #ead4c8;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row0_col2 {\n",
              "  background-color: #e0654f;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row0_col3 {\n",
              "  background-color: #f6bea4;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row0_col4, #T_0653e_row0_col8, #T_0653e_row11_col6 {\n",
              "  background-color: #f5c0a7;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row0_col5, #T_0653e_row5_col11 {\n",
              "  background-color: #e16751;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row0_col6 {\n",
              "  background-color: #f59c7d;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row0_col7, #T_0653e_row8_col0 {\n",
              "  background-color: #bfd3f6;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row0_col9 {\n",
              "  background-color: #c7d7f0;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row0_col10, #T_0653e_row4_col2, #T_0653e_row10_col5, #T_0653e_row11_col3 {\n",
              "  background-color: #ebd3c6;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row0_col11 {\n",
              "  background-color: #ed8366;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row1_col0 {\n",
              "  background-color: #e5d8d1;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row1_col2 {\n",
              "  background-color: #c9d7f0;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row1_col3 {\n",
              "  background-color: #c32e31;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row1_col4, #T_0653e_row3_col1, #T_0653e_row6_col3 {\n",
              "  background-color: #be242e;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row1_col5, #T_0653e_row8_col11 {\n",
              "  background-color: #c3d5f4;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row1_col6 {\n",
              "  background-color: #e26952;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row1_col7 {\n",
              "  background-color: #d65244;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row1_col8 {\n",
              "  background-color: #b5cdfa;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row1_col9 {\n",
              "  background-color: #ca3b37;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row1_col10, #T_0653e_row11_col2 {\n",
              "  background-color: #d24b40;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row1_col11 {\n",
              "  background-color: #d6dce4;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row2_col0 {\n",
              "  background-color: #ee8669;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row2_col1 {\n",
              "  background-color: #7295f4;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row2_col3 {\n",
              "  background-color: #9abbff;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row2_col4 {\n",
              "  background-color: #8fb1fe;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row2_col5 {\n",
              "  background-color: #b70d28;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row2_col6 {\n",
              "  background-color: #c6d6f1;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row2_col7 {\n",
              "  background-color: #536edd;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row2_col8, #T_0653e_row5_col0 {\n",
              "  background-color: #f18d6f;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row2_col9 {\n",
              "  background-color: #5673e0;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row2_col10 {\n",
              "  background-color: #96b7ff;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row2_col11 {\n",
              "  background-color: #dd5f4b;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row3_col0 {\n",
              "  background-color: #f7a889;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row3_col2, #T_0653e_row10_col0 {\n",
              "  background-color: #f4c6af;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row3_col4, #T_0653e_row4_col3 {\n",
              "  background-color: #ba162b;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row3_col5, #T_0653e_row11_col10 {\n",
              "  background-color: #f1ccb8;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row3_col6 {\n",
              "  background-color: #c0282f;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row3_col7, #T_0653e_row4_col7 {\n",
              "  background-color: #ea7b60;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row3_col8, #T_0653e_row11_col4 {\n",
              "  background-color: #dfdbd9;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row3_col9 {\n",
              "  background-color: #d85646;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row3_col10 {\n",
              "  background-color: #c73635;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row3_col11, #T_0653e_row9_col6 {\n",
              "  background-color: #f7b79b;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row4_col0 {\n",
              "  background-color: #f7b599;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row4_col1 {\n",
              "  background-color: #bd1f2d;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row4_col5 {\n",
              "  background-color: #e7d7ce;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row4_col6, #T_0653e_row9_col7 {\n",
              "  background-color: #c53334;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row4_col8, #T_0653e_row11_col1 {\n",
              "  background-color: #d1dae9;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row4_col9 {\n",
              "  background-color: #de614d;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row4_col10 {\n",
              "  background-color: #cf453c;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row4_col11, #T_0653e_row10_col2 {\n",
              "  background-color: #f1cdba;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row5_col1 {\n",
              "  background-color: #5977e3;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row5_col2 {\n",
              "  background-color: #b8122a;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row5_col3 {\n",
              "  background-color: #7b9ff9;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row5_col4, #T_0653e_row5_col10 {\n",
              "  background-color: #7597f6;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row5_col6 {\n",
              "  background-color: #afcafc;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row5_col7 {\n",
              "  background-color: #4358cb;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row5_col8 {\n",
              "  background-color: #f7ad90;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row5_col9, #T_0653e_row7_col0, #T_0653e_row7_col2, #T_0653e_row7_col5, #T_0653e_row7_col8, #T_0653e_row7_col11, #T_0653e_row8_col1, #T_0653e_row8_col3, #T_0653e_row8_col4, #T_0653e_row8_col6, #T_0653e_row8_col7, #T_0653e_row8_col10 {\n",
              "  background-color: #3b4cc0;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row6_col0 {\n",
              "  background-color: #eb7d62;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row6_col1, #T_0653e_row11_col5 {\n",
              "  background-color: #d55042;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row6_col2 {\n",
              "  background-color: #f6a283;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row6_col4 {\n",
              "  background-color: #c12b30;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row6_col5 {\n",
              "  background-color: #f7a98b;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row6_col7 {\n",
              "  background-color: #f7a688;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row6_col8 {\n",
              "  background-color: #edd2c3;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row6_col9, #T_0653e_row9_col10 {\n",
              "  background-color: #ef886b;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row6_col10 {\n",
              "  background-color: #d44e41;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row6_col11 {\n",
              "  background-color: #f39475;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row7_col1, #T_0653e_row10_col9 {\n",
              "  background-color: #e57058;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row7_col3 {\n",
              "  background-color: #f5c2aa;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row7_col4 {\n",
              "  background-color: #f7b89c;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row7_col6, #T_0653e_row9_col0, #T_0653e_row11_col7 {\n",
              "  background-color: #aec9fc;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row7_col9, #T_0653e_row10_col1, #T_0653e_row10_col4 {\n",
              "  background-color: #cd423b;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row7_col10 {\n",
              "  background-color: #f0cdbb;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row8_col2 {\n",
              "  background-color: #f39577;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row8_col5 {\n",
              "  background-color: #f7b093;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row8_col9 {\n",
              "  background-color: #4f69d9;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row9_col1 {\n",
              "  background-color: #cc403a;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row9_col2 {\n",
              "  background-color: #a6c4fe;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row9_col3 {\n",
              "  background-color: #e36c55;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row9_col4 {\n",
              "  background-color: #e67259;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row9_col5 {\n",
              "  background-color: #9dbdff;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row9_col8 {\n",
              "  background-color: #b3cdfb;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row9_col11 {\n",
              "  background-color: #a7c5fe;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row10_col3 {\n",
              "  background-color: #c83836;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row10_col6 {\n",
              "  background-color: #d95847;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row10_col7, #T_0653e_row11_col0 {\n",
              "  background-color: #f08a6c;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_0653e_row10_col8 {\n",
              "  background-color: #d7dce3;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row10_col11 {\n",
              "  background-color: #f7b396;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row11_col8 {\n",
              "  background-color: #f3c8b2;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_0653e_row11_col9 {\n",
              "  background-color: #b1cbfc;\n",
              "  color: #000000;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_0653e\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_0653e_level0_col0\" class=\"col_heading level0 col0\" >PIB</th>\n",
              "      <th id=\"T_0653e_level0_col1\" class=\"col_heading level0 col1\" >BRL</th>\n",
              "      <th id=\"T_0653e_level0_col2\" class=\"col_heading level0 col2\" >BRP</th>\n",
              "      <th id=\"T_0653e_level0_col3\" class=\"col_heading level0 col3\" >BRT</th>\n",
              "      <th id=\"T_0653e_level0_col4\" class=\"col_heading level0 col4\" >SLP</th>\n",
              "      <th id=\"T_0653e_level0_col5\" class=\"col_heading level0 col5\" >SPP</th>\n",
              "      <th id=\"T_0653e_level0_col6\" class=\"col_heading level0 col6\" >SPT</th>\n",
              "      <th id=\"T_0653e_level0_col7\" class=\"col_heading level0 col7\" >PRL</th>\n",
              "      <th id=\"T_0653e_level0_col8\" class=\"col_heading level0 col8\" >PRP</th>\n",
              "      <th id=\"T_0653e_level0_col9\" class=\"col_heading level0 col9\" >PRT</th>\n",
              "      <th id=\"T_0653e_level0_col10\" class=\"col_heading level0 col10\" >RJL</th>\n",
              "      <th id=\"T_0653e_level0_col11\" class=\"col_heading level0 col11\" >RJP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_0653e_level0_row0\" class=\"row_heading level0 row0\" >PIB</th>\n",
              "      <td id=\"T_0653e_row0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
              "      <td id=\"T_0653e_row0_col1\" class=\"data row0 col1\" >0.875316</td>\n",
              "      <td id=\"T_0653e_row0_col2\" class=\"data row0 col2\" >0.945026</td>\n",
              "      <td id=\"T_0653e_row0_col3\" class=\"data row0 col3\" >0.923355</td>\n",
              "      <td id=\"T_0653e_row0_col4\" class=\"data row0 col4\" >0.912627</td>\n",
              "      <td id=\"T_0653e_row0_col5\" class=\"data row0 col5\" >0.940794</td>\n",
              "      <td id=\"T_0653e_row0_col6\" class=\"data row0 col6\" >0.951017</td>\n",
              "      <td id=\"T_0653e_row0_col7\" class=\"data row0 col7\" >0.733248</td>\n",
              "      <td id=\"T_0653e_row0_col8\" class=\"data row0 col8\" >0.839292</td>\n",
              "      <td id=\"T_0653e_row0_col9\" class=\"data row0 col9\" >0.825325</td>\n",
              "      <td id=\"T_0653e_row0_col10\" class=\"data row0 col10\" >0.898519</td>\n",
              "      <td id=\"T_0653e_row0_col11\" class=\"data row0 col11\" >0.942831</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_0653e_level0_row1\" class=\"row_heading level0 row1\" >BRL</th>\n",
              "      <td id=\"T_0653e_row1_col0\" class=\"data row1 col0\" >0.875316</td>\n",
              "      <td id=\"T_0653e_row1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
              "      <td id=\"T_0653e_row1_col2\" class=\"data row1 col2\" >0.767459</td>\n",
              "      <td id=\"T_0653e_row1_col3\" class=\"data row1 col3\" >0.991358</td>\n",
              "      <td id=\"T_0653e_row1_col4\" class=\"data row1 col4\" >0.993062</td>\n",
              "      <td id=\"T_0653e_row1_col5\" class=\"data row1 col5\" >0.746181</td>\n",
              "      <td id=\"T_0653e_row1_col6\" class=\"data row1 col6\" >0.972831</td>\n",
              "      <td id=\"T_0653e_row1_col7\" class=\"data row1 col7\" >0.955565</td>\n",
              "      <td id=\"T_0653e_row1_col8\" class=\"data row1 col8\" >0.718522</td>\n",
              "      <td id=\"T_0653e_row1_col9\" class=\"data row1 col9\" >0.981076</td>\n",
              "      <td id=\"T_0653e_row1_col10\" class=\"data row1 col10\" >0.979452</td>\n",
              "      <td id=\"T_0653e_row1_col11\" class=\"data row1 col11\" >0.846981</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_0653e_level0_row2\" class=\"row_heading level0 row2\" >BRP</th>\n",
              "      <td id=\"T_0653e_row2_col0\" class=\"data row2 col0\" >0.945026</td>\n",
              "      <td id=\"T_0653e_row2_col1\" class=\"data row2 col1\" >0.767459</td>\n",
              "      <td id=\"T_0653e_row2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
              "      <td id=\"T_0653e_row2_col3\" class=\"data row2 col3\" >0.844730</td>\n",
              "      <td id=\"T_0653e_row2_col4\" class=\"data row2 col4\" >0.820792</td>\n",
              "      <td id=\"T_0653e_row2_col5\" class=\"data row2 col5\" >0.995076</td>\n",
              "      <td id=\"T_0653e_row2_col6\" class=\"data row2 col6\" >0.888951</td>\n",
              "      <td id=\"T_0653e_row2_col7\" class=\"data row2 col7\" >0.592349</td>\n",
              "      <td id=\"T_0653e_row2_col8\" class=\"data row2 col8\" >0.902659</td>\n",
              "      <td id=\"T_0653e_row2_col9\" class=\"data row2 col9\" >0.723687</td>\n",
              "      <td id=\"T_0653e_row2_col10\" class=\"data row2 col10\" >0.833051</td>\n",
              "      <td id=\"T_0653e_row2_col11\" class=\"data row2 col11\" >0.964372</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_0653e_level0_row3\" class=\"row_heading level0 row3\" >BRT</th>\n",
              "      <td id=\"T_0653e_row3_col0\" class=\"data row3 col0\" >0.923355</td>\n",
              "      <td id=\"T_0653e_row3_col1\" class=\"data row3 col1\" >0.991358</td>\n",
              "      <td id=\"T_0653e_row3_col2\" class=\"data row3 col2\" >0.844730</td>\n",
              "      <td id=\"T_0653e_row3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
              "      <td id=\"T_0653e_row3_col4\" class=\"data row3 col4\" >0.996182</td>\n",
              "      <td id=\"T_0653e_row3_col5\" class=\"data row3 col5\" >0.826268</td>\n",
              "      <td id=\"T_0653e_row3_col6\" class=\"data row3 col6\" >0.993391</td>\n",
              "      <td id=\"T_0653e_row3_col7\" class=\"data row3 col7\" >0.919659</td>\n",
              "      <td id=\"T_0653e_row3_col8\" class=\"data row3 col8\" >0.782612</td>\n",
              "      <td id=\"T_0653e_row3_col9\" class=\"data row3 col9\" >0.967285</td>\n",
              "      <td id=\"T_0653e_row3_col10\" class=\"data row3 col10\" >0.987573</td>\n",
              "      <td id=\"T_0653e_row3_col11\" class=\"data row3 col11\" >0.904601</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_0653e_level0_row4\" class=\"row_heading level0 row4\" >SLP</th>\n",
              "      <td id=\"T_0653e_row4_col0\" class=\"data row4 col0\" >0.912627</td>\n",
              "      <td id=\"T_0653e_row4_col1\" class=\"data row4 col1\" >0.993062</td>\n",
              "      <td id=\"T_0653e_row4_col2\" class=\"data row4 col2\" >0.820792</td>\n",
              "      <td id=\"T_0653e_row4_col3\" class=\"data row4 col3\" >0.996182</td>\n",
              "      <td id=\"T_0653e_row4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
              "      <td id=\"T_0653e_row4_col5\" class=\"data row4 col5\" >0.802807</td>\n",
              "      <td id=\"T_0653e_row4_col6\" class=\"data row4 col6\" >0.990845</td>\n",
              "      <td id=\"T_0653e_row4_col7\" class=\"data row4 col7\" >0.919804</td>\n",
              "      <td id=\"T_0653e_row4_col8\" class=\"data row4 col8\" >0.759298</td>\n",
              "      <td id=\"T_0653e_row4_col9\" class=\"data row4 col9\" >0.961229</td>\n",
              "      <td id=\"T_0653e_row4_col10\" class=\"data row4 col10\" >0.982256</td>\n",
              "      <td id=\"T_0653e_row4_col11\" class=\"data row4 col11\" >0.881877</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_0653e_level0_row5\" class=\"row_heading level0 row5\" >SPP</th>\n",
              "      <td id=\"T_0653e_row5_col0\" class=\"data row5 col0\" >0.940794</td>\n",
              "      <td id=\"T_0653e_row5_col1\" class=\"data row5 col1\" >0.746181</td>\n",
              "      <td id=\"T_0653e_row5_col2\" class=\"data row5 col2\" >0.995076</td>\n",
              "      <td id=\"T_0653e_row5_col3\" class=\"data row5 col3\" >0.826268</td>\n",
              "      <td id=\"T_0653e_row5_col4\" class=\"data row5 col4\" >0.802807</td>\n",
              "      <td id=\"T_0653e_row5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
              "      <td id=\"T_0653e_row5_col6\" class=\"data row5 col6\" >0.875741</td>\n",
              "      <td id=\"T_0653e_row5_col7\" class=\"data row5 col7\" >0.570393</td>\n",
              "      <td id=\"T_0653e_row5_col8\" class=\"data row5 col8\" >0.866241</td>\n",
              "      <td id=\"T_0653e_row5_col9\" class=\"data row5 col9\" >0.696353</td>\n",
              "      <td id=\"T_0653e_row5_col10\" class=\"data row5 col10\" >0.811741</td>\n",
              "      <td id=\"T_0653e_row5_col11\" class=\"data row5 col11\" >0.959666</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_0653e_level0_row6\" class=\"row_heading level0 row6\" >SPT</th>\n",
              "      <td id=\"T_0653e_row6_col0\" class=\"data row6 col0\" >0.951017</td>\n",
              "      <td id=\"T_0653e_row6_col1\" class=\"data row6 col1\" >0.972831</td>\n",
              "      <td id=\"T_0653e_row6_col2\" class=\"data row6 col2\" >0.888951</td>\n",
              "      <td id=\"T_0653e_row6_col3\" class=\"data row6 col3\" >0.993391</td>\n",
              "      <td id=\"T_0653e_row6_col4\" class=\"data row6 col4\" >0.990845</td>\n",
              "      <td id=\"T_0653e_row6_col5\" class=\"data row6 col5\" >0.875741</td>\n",
              "      <td id=\"T_0653e_row6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
              "      <td id=\"T_0653e_row6_col7\" class=\"data row6 col7\" >0.875226</td>\n",
              "      <td id=\"T_0653e_row6_col8\" class=\"data row6 col8\" >0.808810</td>\n",
              "      <td id=\"T_0653e_row6_col9\" class=\"data row6 col9\" >0.936562</td>\n",
              "      <td id=\"T_0653e_row6_col10\" class=\"data row6 col10\" >0.978696</td>\n",
              "      <td id=\"T_0653e_row6_col11\" class=\"data row6 col11\" >0.931131</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_0653e_level0_row7\" class=\"row_heading level0 row7\" >PRL</th>\n",
              "      <td id=\"T_0653e_row7_col0\" class=\"data row7 col0\" >0.733248</td>\n",
              "      <td id=\"T_0653e_row7_col1\" class=\"data row7 col1\" >0.955565</td>\n",
              "      <td id=\"T_0653e_row7_col2\" class=\"data row7 col2\" >0.592349</td>\n",
              "      <td id=\"T_0653e_row7_col3\" class=\"data row7 col3\" >0.919659</td>\n",
              "      <td id=\"T_0653e_row7_col4\" class=\"data row7 col4\" >0.919804</td>\n",
              "      <td id=\"T_0653e_row7_col5\" class=\"data row7 col5\" >0.570393</td>\n",
              "      <td id=\"T_0653e_row7_col6\" class=\"data row7 col6\" >0.875226</td>\n",
              "      <td id=\"T_0653e_row7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
              "      <td id=\"T_0653e_row7_col8\" class=\"data row7 col8\" >0.556847</td>\n",
              "      <td id=\"T_0653e_row7_col9\" class=\"data row7 col9\" >0.978079</td>\n",
              "      <td id=\"T_0653e_row7_col10\" class=\"data row7 col10\" >0.905421</td>\n",
              "      <td id=\"T_0653e_row7_col11\" class=\"data row7 col11\" >0.709462</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_0653e_level0_row8\" class=\"row_heading level0 row8\" >PRP</th>\n",
              "      <td id=\"T_0653e_row8_col0\" class=\"data row8 col0\" >0.839292</td>\n",
              "      <td id=\"T_0653e_row8_col1\" class=\"data row8 col1\" >0.718522</td>\n",
              "      <td id=\"T_0653e_row8_col2\" class=\"data row8 col2\" >0.902659</td>\n",
              "      <td id=\"T_0653e_row8_col3\" class=\"data row8 col3\" >0.782612</td>\n",
              "      <td id=\"T_0653e_row8_col4\" class=\"data row8 col4\" >0.759298</td>\n",
              "      <td id=\"T_0653e_row8_col5\" class=\"data row8 col5\" >0.866241</td>\n",
              "      <td id=\"T_0653e_row8_col6\" class=\"data row8 col6\" >0.808810</td>\n",
              "      <td id=\"T_0653e_row8_col7\" class=\"data row8 col7\" >0.556847</td>\n",
              "      <td id=\"T_0653e_row8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
              "      <td id=\"T_0653e_row8_col9\" class=\"data row8 col9\" >0.717468</td>\n",
              "      <td id=\"T_0653e_row8_col10\" class=\"data row8 col10\" >0.769610</td>\n",
              "      <td id=\"T_0653e_row8_col11\" class=\"data row8 col11\" >0.828425</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_0653e_level0_row9\" class=\"row_heading level0 row9\" >PRT</th>\n",
              "      <td id=\"T_0653e_row9_col0\" class=\"data row9 col0\" >0.825325</td>\n",
              "      <td id=\"T_0653e_row9_col1\" class=\"data row9 col1\" >0.981076</td>\n",
              "      <td id=\"T_0653e_row9_col2\" class=\"data row9 col2\" >0.723687</td>\n",
              "      <td id=\"T_0653e_row9_col3\" class=\"data row9 col3\" >0.967285</td>\n",
              "      <td id=\"T_0653e_row9_col4\" class=\"data row9 col4\" >0.961229</td>\n",
              "      <td id=\"T_0653e_row9_col5\" class=\"data row9 col5\" >0.696353</td>\n",
              "      <td id=\"T_0653e_row9_col6\" class=\"data row9 col6\" >0.936562</td>\n",
              "      <td id=\"T_0653e_row9_col7\" class=\"data row9 col7\" >0.978079</td>\n",
              "      <td id=\"T_0653e_row9_col8\" class=\"data row9 col8\" >0.717468</td>\n",
              "      <td id=\"T_0653e_row9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
              "      <td id=\"T_0653e_row9_col10\" class=\"data row9 col10\" >0.952224</td>\n",
              "      <td id=\"T_0653e_row9_col11\" class=\"data row9 col11\" >0.803776</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_0653e_level0_row10\" class=\"row_heading level0 row10\" >RJL</th>\n",
              "      <td id=\"T_0653e_row10_col0\" class=\"data row10 col0\" >0.898519</td>\n",
              "      <td id=\"T_0653e_row10_col1\" class=\"data row10 col1\" >0.979452</td>\n",
              "      <td id=\"T_0653e_row10_col2\" class=\"data row10 col2\" >0.833051</td>\n",
              "      <td id=\"T_0653e_row10_col3\" class=\"data row10 col3\" >0.987573</td>\n",
              "      <td id=\"T_0653e_row10_col4\" class=\"data row10 col4\" >0.982256</td>\n",
              "      <td id=\"T_0653e_row10_col5\" class=\"data row10 col5\" >0.811741</td>\n",
              "      <td id=\"T_0653e_row10_col6\" class=\"data row10 col6\" >0.978696</td>\n",
              "      <td id=\"T_0653e_row10_col7\" class=\"data row10 col7\" >0.905421</td>\n",
              "      <td id=\"T_0653e_row10_col8\" class=\"data row10 col8\" >0.769610</td>\n",
              "      <td id=\"T_0653e_row10_col9\" class=\"data row10 col9\" >0.952224</td>\n",
              "      <td id=\"T_0653e_row10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
              "      <td id=\"T_0653e_row10_col11\" class=\"data row10 col11\" >0.907173</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_0653e_level0_row11\" class=\"row_heading level0 row11\" >RJP</th>\n",
              "      <td id=\"T_0653e_row11_col0\" class=\"data row11 col0\" >0.942831</td>\n",
              "      <td id=\"T_0653e_row11_col1\" class=\"data row11 col1\" >0.846981</td>\n",
              "      <td id=\"T_0653e_row11_col2\" class=\"data row11 col2\" >0.964372</td>\n",
              "      <td id=\"T_0653e_row11_col3\" class=\"data row11 col3\" >0.904601</td>\n",
              "      <td id=\"T_0653e_row11_col4\" class=\"data row11 col4\" >0.881877</td>\n",
              "      <td id=\"T_0653e_row11_col5\" class=\"data row11 col5\" >0.959666</td>\n",
              "      <td id=\"T_0653e_row11_col6\" class=\"data row11 col6\" >0.931131</td>\n",
              "      <td id=\"T_0653e_row11_col7\" class=\"data row11 col7\" >0.709462</td>\n",
              "      <td id=\"T_0653e_row11_col8\" class=\"data row11 col8\" >0.828425</td>\n",
              "      <td id=\"T_0653e_row11_col9\" class=\"data row11 col9\" >0.803776</td>\n",
              "      <td id=\"T_0653e_row11_col10\" class=\"data row11 col10\" >0.907173</td>\n",
              "      <td id=\"T_0653e_row11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {},
          "execution_count": 108
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Com essa informações de correlação, é possível entender que as váriveis com as correlações mais fortes com a váriavel PIB, que são:\n",
        "\n",
        "- BRP\n",
        "- SPT\n",
        "- RJP\n",
        "- SPP\n",
        "\n",
        "Vamos fazer alguns modelos para ver como as previsões se comportam em relação ao PIB"
      ],
      "metadata": {
        "id": "outqgnQ9zRMi"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def info_mod_prev (y, x, data):\n",
        "    # Separação dos dados entre treino e teste\n",
        "    treino = data.iloc[0:126]\n",
        "    teste = data.iloc[126:138]\n",
        "\n",
        "    # Y recebe PIB - X recebe valor de relação\n",
        "    if type(x) == list:\n",
        "        x_treino = treino[x]\n",
        "        x_teste = teste[x]\n",
        "    else:\n",
        "        x_treino = treino[[f'{x}']]\n",
        "        x_teste = teste[[f'{x}']]\n",
        "\n",
        "    y_treino = treino[[f'{y}']]\n",
        "    y_teste = teste[[f'{y}']]\n",
        "\n",
        "\n",
        "    # Criação do modelo de regressão\n",
        "    mod = LinearRegression()\n",
        "    mod.fit(X=x_treino, y=y_treino)\n",
        "\n",
        "    # Valor R²\n",
        "    r2 = mod.score(X=x_treino, y=y_treino)\n",
        "\n",
        "    # P-valor e Valor do Erro padrão/Erro de treino\n",
        "    mod_sm = sm.OLS(y_treino, x_treino).fit()\n",
        "    pvalor = mod_sm.pvalues[0]\n",
        "    errostd = mod_sm.bse[0]\n",
        "\n",
        "    # Valor erro da previsão\n",
        "    y_prev = mod.predict(x_teste)\n",
        "    erro_prev = mae(y_teste, y_prev)\n",
        "\n",
        "    return r2, pvalor, errostd, erro_prev"
      ],
      "metadata": {
        "id": "NjI71isAwa-9"
      },
      "execution_count": 175,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Vamos definir os dados que queremos observar\n",
        "colunas = [\n",
        "    ['PIB','BRP'],\n",
        "    ['PIB','SPT'],\n",
        "    ['PIB','RJP'],\n",
        "    ['PIB','SPP'],\n",
        "\n",
        "    ['PIB',['BRP','SPT']],\n",
        "    ['PIB',['SPT','RJP']],\n",
        "    ['PIB',['RJP','SPP']],\n",
        "    ['PIB',['SPP','BRP']],\n",
        "    ['PIB',['BRP','RJP']],\n",
        "    ['PIB',['SPT','SPP']]\n",
        "    ]\n",
        "\n",
        "multicolunas = [\n",
        "\n",
        "]\n",
        "\n",
        "# Váriaveis que vão guardar os valores\n",
        "valor_r2, p_valores, erro_medio, erro_prev = [],[],[],[]\n",
        "\n",
        "# Observação das colunas bi-valores\n",
        "for i in colunas:\n",
        "    x = info_mod_prev(y=i[0], x=i[1], data= data)\n",
        "\n",
        "    valor_r2.append(x[0])\n",
        "    p_valores.append(x[1])\n",
        "    erro_medio.append(x[2])\n",
        "    erro_prev.append(x[3])\n",
        "\n",
        "# Observação das colunas tri-valores\n",
        "for i in multicolunas:\n",
        "    x = info_mod_prev(y=i[0], x=i[1], data= data)\n",
        "\n",
        "    valor_r2.append(x[0])\n",
        "    p_valores.append(x[1])\n",
        "    erro_medio.append(x[2])\n",
        "    erro_prev.append(x[3])\n",
        "\n"
      ],
      "metadata": {
        "id": "C0OPywyXwbEY"
      },
      "execution_count": 182,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "results = pd.DataFrame({\n",
        "    'Modelos': colunas,\n",
        "    'R^2': valor_r2,\n",
        "    'p-valor': p_valores,\n",
        "    'Erro(treino)': erro_medio,\n",
        "    'Erro(prev)': erro_prev\n",
        "})\n",
        "results"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "id": "Mtl39WZqwbIO",
        "outputId": "975ed4b8-e20c-4620-c269-03c048a69b90"
      },
      "execution_count": 185,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             Modelos       R^2        p-valor  Erro(treino)  Erro(prev)\n",
              "0         [PIB, BRP]  0.903684  1.612274e-176      0.003351    6.719446\n",
              "1         [PIB, SPT]  0.901356  2.275571e-152      0.005573    3.685645\n",
              "2         [PIB, RJP]  0.903184  1.181509e-180      0.003626    6.618141\n",
              "3         [PIB, SPP]  0.901495  4.671993e-166      0.003655    8.197086\n",
              "4  [PIB, [BRP, SPT]]  0.949811   1.947759e-33      0.040540    2.396678\n",
              "5  [PIB, [SPT, RJP]]  0.927806   1.041029e-03      0.051174    3.827684\n",
              "6  [PIB, [RJP, SPP]]  0.920176   2.856767e-18      0.081293    7.090269\n",
              "7  [PIB, [SPP, BRP]]  0.904801   5.597258e-03      0.151470    7.245971\n",
              "8  [PIB, [BRP, RJP]]  0.919562   2.590166e-05      0.085731    6.376778\n",
              "9  [PIB, [SPT, SPP]]  0.952945   2.085045e-10      0.050828    2.816303"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f6244942-b8f2-4b9d-84df-9cc0e02eeeb1\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Modelos</th>\n",
              "      <th>R^2</th>\n",
              "      <th>p-valor</th>\n",
              "      <th>Erro(treino)</th>\n",
              "      <th>Erro(prev)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>[PIB, BRP]</td>\n",
              "      <td>0.903684</td>\n",
              "      <td>1.612274e-176</td>\n",
              "      <td>0.003351</td>\n",
              "      <td>6.719446</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>[PIB, SPT]</td>\n",
              "      <td>0.901356</td>\n",
              "      <td>2.275571e-152</td>\n",
              "      <td>0.005573</td>\n",
              "      <td>3.685645</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>[PIB, RJP]</td>\n",
              "      <td>0.903184</td>\n",
              "      <td>1.181509e-180</td>\n",
              "      <td>0.003626</td>\n",
              "      <td>6.618141</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>[PIB, SPP]</td>\n",
              "      <td>0.901495</td>\n",
              "      <td>4.671993e-166</td>\n",
              "      <td>0.003655</td>\n",
              "      <td>8.197086</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>[PIB, [BRP, SPT]]</td>\n",
              "      <td>0.949811</td>\n",
              "      <td>1.947759e-33</td>\n",
              "      <td>0.040540</td>\n",
              "      <td>2.396678</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>[PIB, [SPT, RJP]]</td>\n",
              "      <td>0.927806</td>\n",
              "      <td>1.041029e-03</td>\n",
              "      <td>0.051174</td>\n",
              "      <td>3.827684</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>[PIB, [RJP, SPP]]</td>\n",
              "      <td>0.920176</td>\n",
              "      <td>2.856767e-18</td>\n",
              "      <td>0.081293</td>\n",
              "      <td>7.090269</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>[PIB, [SPP, BRP]]</td>\n",
              "      <td>0.904801</td>\n",
              "      <td>5.597258e-03</td>\n",
              "      <td>0.151470</td>\n",
              "      <td>7.245971</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>[PIB, [BRP, RJP]]</td>\n",
              "      <td>0.919562</td>\n",
              "      <td>2.590166e-05</td>\n",
              "      <td>0.085731</td>\n",
              "      <td>6.376778</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>[PIB, [SPT, SPP]]</td>\n",
              "      <td>0.952945</td>\n",
              "      <td>2.085045e-10</td>\n",
              "      <td>0.050828</td>\n",
              "      <td>2.816303</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f6244942-b8f2-4b9d-84df-9cc0e02eeeb1')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f6244942-b8f2-4b9d-84df-9cc0e02eeeb1 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f6244942-b8f2-4b9d-84df-9cc0e02eeeb1');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8a038cec-bf1b-4bd3-bf86-f6089e6871e9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8a038cec-bf1b-4bd3-bf86-f6089e6871e9')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8a038cec-bf1b-4bd3-bf86-f6089e6871e9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_faafd098-a51d-4fec-b51a-dd1f06a7f220\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('results')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_faafd098-a51d-4fec-b51a-dd1f06a7f220 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('results');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "results",
              "summary": "{\n  \"name\": \"results\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Modelos\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R^2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.019670163866875437,\n        \"min\": 0.9013561523432017,\n        \"max\": 0.9529454433669164,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.9195622668015428,\n          0.9013561523432017,\n          0.9278060906150067\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"p-valor\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.001762969913100392,\n        \"min\": 1.1815088168368876e-180,\n        \"max\": 0.005597257785842679,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          2.590165806405017e-05,\n          2.2755713295308526e-152,\n          0.0010410293657928489\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Erro(treino)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04835083643582722,\n        \"min\": 0.0033512696875623547,\n        \"max\": 0.15147049147506042,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.08573087344803819,\n          0.0055731751480557635,\n          0.05117436754648877\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Erro(prev)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.0890978199202617,\n        \"min\": 2.396677655014661,\n        \"max\": 8.197086166723226,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          6.376777542207627,\n          3.6856448732134695,\n          3.8276835010974466\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 185
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "results.sort_values(by='Erro(prev)', ascending=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "id": "kalMv-K08Bud",
        "outputId": "b5e2de7f-3d25-41f9-ff79-50d81c812661"
      },
      "execution_count": 186,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             Modelos       R^2        p-valor  Erro(treino)  Erro(prev)\n",
              "4  [PIB, [BRP, SPT]]  0.949811   1.947759e-33      0.040540    2.396678\n",
              "9  [PIB, [SPT, SPP]]  0.952945   2.085045e-10      0.050828    2.816303\n",
              "1         [PIB, SPT]  0.901356  2.275571e-152      0.005573    3.685645\n",
              "5  [PIB, [SPT, RJP]]  0.927806   1.041029e-03      0.051174    3.827684\n",
              "8  [PIB, [BRP, RJP]]  0.919562   2.590166e-05      0.085731    6.376778\n",
              "2         [PIB, RJP]  0.903184  1.181509e-180      0.003626    6.618141\n",
              "0         [PIB, BRP]  0.903684  1.612274e-176      0.003351    6.719446\n",
              "6  [PIB, [RJP, SPP]]  0.920176   2.856767e-18      0.081293    7.090269\n",
              "7  [PIB, [SPP, BRP]]  0.904801   5.597258e-03      0.151470    7.245971\n",
              "3         [PIB, SPP]  0.901495  4.671993e-166      0.003655    8.197086"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-654b4863-f771-409d-a743-b549fa1cb581\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Modelos</th>\n",
              "      <th>R^2</th>\n",
              "      <th>p-valor</th>\n",
              "      <th>Erro(treino)</th>\n",
              "      <th>Erro(prev)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>[PIB, [BRP, SPT]]</td>\n",
              "      <td>0.949811</td>\n",
              "      <td>1.947759e-33</td>\n",
              "      <td>0.040540</td>\n",
              "      <td>2.396678</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>[PIB, [SPT, SPP]]</td>\n",
              "      <td>0.952945</td>\n",
              "      <td>2.085045e-10</td>\n",
              "      <td>0.050828</td>\n",
              "      <td>2.816303</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>[PIB, SPT]</td>\n",
              "      <td>0.901356</td>\n",
              "      <td>2.275571e-152</td>\n",
              "      <td>0.005573</td>\n",
              "      <td>3.685645</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>[PIB, [SPT, RJP]]</td>\n",
              "      <td>0.927806</td>\n",
              "      <td>1.041029e-03</td>\n",
              "      <td>0.051174</td>\n",
              "      <td>3.827684</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>[PIB, [BRP, RJP]]</td>\n",
              "      <td>0.919562</td>\n",
              "      <td>2.590166e-05</td>\n",
              "      <td>0.085731</td>\n",
              "      <td>6.376778</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>[PIB, RJP]</td>\n",
              "      <td>0.903184</td>\n",
              "      <td>1.181509e-180</td>\n",
              "      <td>0.003626</td>\n",
              "      <td>6.618141</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>[PIB, BRP]</td>\n",
              "      <td>0.903684</td>\n",
              "      <td>1.612274e-176</td>\n",
              "      <td>0.003351</td>\n",
              "      <td>6.719446</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>[PIB, [RJP, SPP]]</td>\n",
              "      <td>0.920176</td>\n",
              "      <td>2.856767e-18</td>\n",
              "      <td>0.081293</td>\n",
              "      <td>7.090269</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>[PIB, [SPP, BRP]]</td>\n",
              "      <td>0.904801</td>\n",
              "      <td>5.597258e-03</td>\n",
              "      <td>0.151470</td>\n",
              "      <td>7.245971</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>[PIB, SPP]</td>\n",
              "      <td>0.901495</td>\n",
              "      <td>4.671993e-166</td>\n",
              "      <td>0.003655</td>\n",
              "      <td>8.197086</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-654b4863-f771-409d-a743-b549fa1cb581')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-654b4863-f771-409d-a743-b549fa1cb581 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-654b4863-f771-409d-a743-b549fa1cb581');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c6843d8d-f593-484a-99fb-6850710ffe65\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c6843d8d-f593-484a-99fb-6850710ffe65')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c6843d8d-f593-484a-99fb-6850710ffe65 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"results\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Modelos\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R^2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.019670163866875437,\n        \"min\": 0.9013561523432017,\n        \"max\": 0.9529454433669164,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.904800648531985,\n          0.9529454433669164,\n          0.9031838846516392\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"p-valor\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0017629699131003918,\n        \"min\": 1.1815088168368876e-180,\n        \"max\": 0.005597257785842679,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.005597257785842679,\n          2.0850452883298466e-10,\n          1.1815088168368876e-180\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Erro(treino)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04835083643582722,\n        \"min\": 0.0033512696875623547,\n        \"max\": 0.15147049147506042,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.15147049147506042,\n          0.05082823963472634,\n          0.0036261687153883934\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Erro(prev)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.0890978199202617,\n        \"min\": 2.396677655014661,\n        \"max\": 8.197086166723226,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          7.245970609012379,\n          2.816303213425494,\n          6.618141463641464\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 186
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Com isso é possível verificar que o modelo que apresentou a menor média de erro absoluto, foi o modelo:\n",
        "\n",
        "###'PIB p/ BRP+SPT'"
      ],
      "metadata": {
        "id": "HmWEPidgGElD"
      }
    }
  ]
}